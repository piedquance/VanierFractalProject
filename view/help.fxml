<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.geometry.Insets?>
<?import javafx.scene.control.TextArea?>
<?import javafx.scene.layout.AnchorPane?>

<AnchorPane prefHeight="200.0" prefWidth="200.0" xmlns="http://javafx.com/javafx/11.0.1" xmlns:fx="http://javafx.com/fxml/1">
   <children>
      <TextArea editable="false" prefHeight="326.0" prefWidth="560.0" scrollTop="5.0" text="Iteration count: &#10;Specify the number of times that a fractal cycle is iterated before the function stops. The more iteration there are, the more time the rendering takes. Iteration count should be reduced when rendering the Newton Fractal to reduce rendering time. Koch Snowflake doesn't render above level 5 of iterations. 0-5.&#10;&#10;Radius: &#10;Specify the radius of the Fractal &#10;Min: 0   Max: 1999999999&#10;&#10;Position:&#10;Set a coordinate(H,K) for the position of the desired Fractal &#10;Default is (0,0)&#10;&#10;Scaling:&#10;Zoom into or out of the fracatal. Increasing the value zooms into the fractal.&#10;Default Value: 1&#10;&#10;&#10;Color gradient:&#10;Change the color of the Fractal in a RGB notation (RED,GREEN,BLUE) with a value up to 255  &#10;Here are the 6 possible options:&#10;Option 1:  A Fractal with RGB colors &#10;Option 2:  Same as option 1 but with different background colors&#10;Opiton 3: A black Fractal with a white background &#10;Option 4: A black Fractal with a white and black background &#10;Option 5: Same as option 2 but with a red outline &#10;Option 6: A black Fractal and background with white outline&#10;&#10;Font size:&#10;Specify the font size for the about and help sections.&#10;" wrapText="true">
         <opaqueInsets>
            <Insets />
         </opaqueInsets></TextArea>
   </children>
</AnchorPane>
